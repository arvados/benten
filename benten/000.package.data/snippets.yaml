


CommandLineTool:
  meta: "process"
  tabTrigger: "clt"
  snippet: |-
    class: CommandLineTool
    cwlVersion: v1.0
    doc: ''
    id: $1
    label: $2
    inputs: []
    outputs: []
    baseCommand: ''
    hints: []
    requirements: []

ExpressionTool:
  meta: "process"
  tabTrigger: "et"
  snippet: |-
    class: ExpressionTool
    cwlVersion: v1.0
    id: ''
    label: ''
    doc: ''
    expression: '$\{
        // Expression
        \}'
    inputs: []
    outputs: []
    hints: []
    requirements:
      - class: InlineJavascriptRequirement


Input:
  meta: "snippet"
  tabTrigger: "inp"
  snippet: |-
    type: $1
    label: $2
    default: $3
    secondaryFiles:
      - .fai
    inputBinding:
      position:
      prefix:

Workflow:
  meta: "process"
  tabTrigger: "wf"
  snippet: |-
    class: Workflow
    cwlVersion: v1.0
    doc: ''
    id: $1
    label: $2
    inputs: []
    steps: {}
    outputs: []
    requirements: []
    hints: []


# This scaffold is special in that it's used by the workflow model to insert steps programmatically
# The name "step" is fixed.
# If this scaffold is missing or renamed, Benten will use a default step scaffold model
# If this scaffold is incomplete or malformed programatically adding steps will be affected
step:
  meta: "snippet"
  tabTrigger: "step"
  snippet: |-
    $1:
      label:
      doc: ''
      in: $2
      out: $3
      run: $4
      scatter:
      scatterMethod:
      hints: []
      requirements: []


WFOutput:
  tabTrigger: "wfout"
  snippet: |-
    $1:
      type: File
      outputSource: $2


DockerRequirement:
  tabTrigger: "dock"
  snippet: |-
    DockerRequirement:
      dockerPull: $1


ResourceRequirement:
  tabTrigger: "resreq"
  snippet: |-
    ResourceRequirement:
      coresMin: $1
      ramMin: $2


InitialWorkDirRequirement:
  tabTrigger: "initial"
  snippet: |-
    InitialWorkDirRequirement:
      listing:
        - $(inputs.file_input)
        - entryname: $1
          entry: |-
            PREFIX='Bash variable'
            MSG="\${PREFIX} $(inputs.cwl_variable)"
            echo \${MSG}
